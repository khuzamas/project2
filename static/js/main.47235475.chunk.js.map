{"version":3,"sources":["List.js","Film.js","FilmRow.js","Spotify.js","Youtube.js","FilmDetails.js","Movies.js","Albums.js","AlbumRow.js","AlbumDetails.js","App.js","serviceWorker.js","index.js"],"names":["List","_this","this","react_default","a","createElement","onClick","props","handler","filter","className","Component","Film","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","detailsHandle","film","src","poster_path","alt","title","FilmRow","filmsInRow","row","map","index","undefined","Film_Film","key","Spotify","id","url","concat","filmTitle","trim","albumId","fetch","then","response","json","data","setState","scrolling","frameBorder","allowtransparency","width","height","FilmDetails","Date","release_date","backdrop_path","overview","Spotify_Spotify","TMDB","Albums","cover","album","console","log","cover_medium","catch","err","_this3","AlbumRow","Albums_Albums","AlbumDetails","cover_big","App","handleFilterClick","page","category","filmsList","x","films","length","r","push","allFilms","j","FilmRow_FilmRow","handleDetailsClick","filteredFilms","sort","sortedFilms","i","sorting","songsList","forEach","details","filmDetails","FilmDetails_FilmDetails","handleAlbumClick","albumDetails","AlbumDetails_AlbumDetails","getFilms","items","getSongs","albums","AlbumRow_AlbumRow","songs","allChange","azChange","dateChange","homeChange","songChange","filmList","List_List","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47235475.chunk.js","sourcesContent":["import React, { Component } from 'react'\n// import TMDB from './Movies';\n// import Film from './Film';\n\nexport default class List extends Component {\n\n    //on clicking this> fetch all movies and call Component film with prop film\n    // constructor (props){\n    //     super(props)\n    //     this.state= {\n    //         films: []\n    //     }\n    // }\n\n    // handleFilterClick= () => {\n    //     const filmsList= TMDB.films;\n    //     const allFilms= filmsList.map((film, index) => {\n    //         return <Film filmObj={film} key={index}/>\n    //     })\n\n    //     this.setState({films: allFilms})\n    // }\n\n    render() {\n        // const filmList= this.state.films;\n        return (\n        <div onClick= {() => this.props.handler(this.props.filter)}>\n            <div className=\"filter\">\n                {this.props.filter}\n            </div>\n            \n            {/* <div className=\"list\">\n               {filmList} \n            </div> */}\n            \n        </div>\n        \n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Film extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state= {\n\n    }\n  }\n  render() {\n    // console.log(this.props.filmObj.title);\n    // console.log(this.props.film);\n    \n    return (\n      <div className=\"film\" onClick={() => this.props.detailsHandle(this.props.film)}>\n        <img src={\"https://image.tmdb.org/t/p/w200/\"+this.props.film.poster_path} alt=\"\"/>\n        <p>{this.props.film.title}</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Film from './Film';\n\nexport default class FilmRow extends Component {\n  render() {\n    \n    const filmsInRow= this.props.row.map((film, index) => {\n      if(film!==undefined)\n        return <Film film={film} key={index} detailsHandle={this.props.detailsHandle}/>\n    })\n\n    return (\n      <div className= \"row\">\n        {filmsInRow}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Spotify extends Component {\n\n    state= {\n      id:0\n    }\n\n  render() {\n    \n    \n    //https://api.deezer.com/search/album?q=moana\n    //https://api.deezer.com/album/302127 >> data[0].id\n\n    // console.log('in spotify');\n    \n    const url= `https://cors-anywhere.herokuapp.com/https://api.deezer.com/search/album?q=${(this.props.filmTitle).trim()}-original-soundtrack`;\n    // console.log(url);\n    \n    var albumId= 0;\n    fetch(url).then(response => {\n      response.json().then(data => {\n        if (data.data[0]!==undefined) {\n          albumId= data.data[0].id;\n          // console.log(data);\n          \n          fetch(`https://cors-anywhere.herokuapp.com/https://api.deezer.com/album/${albumId}`).then(response => {\n            response.json().then(data => {\n              // console.log(data.tracks.data);\n              this.setState({id: albumId})\n            })\n          })\n        }\n        \n      })    \n    })\n\n\n    return (\n      <div className=\"tracks\">\n        <iframe scrolling=\"no\" frameBorder=\"0\" allowtransparency=\"true\" \n        src={\"https://www.deezer.com/plugins/player?format=classic&autoplay=false&playlist=true&width=700&height=350&color=ff0000&layout=dark&size=medium&type=album&id=\"+this.state.id+\"&app_id=340402\"}\n        width=\"700\" height=\"350\"></iframe>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\n\nexport default class Youtube extends Component {\n//https://www.googleapis.com/youtube/v3/search?part=frozen%2Ctrailer&maxResults=1&q=skateboarding+dog+&type=video&key=AIzaSyCrd3PrjkScRG1BJ_a4G6Qyy0U43ngfQpk\n    \n//https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&order=relevance&q=frozen+trailer&key={YOUR_API_KEY}\n  \nstate= {\n    link: ''\n}\nrender() {\n      const key= 'AIzaSyCrd3PrjkScRG1BJ_a4G6Qyy0U43ngfQpk';\n      const url= `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&order=relevance&q=${this.props.filmTitle}+disney+trailer&key=${key}`\n\n      var result= '';\n    \n      fetch(url).then(response => {\n        response.json().then(data => {\n            // this.setState({current: data})\n            result= data.items[0].id.videoId;\n            this.setState({link: `https://www.youtube.com/embed/${result}`});\n        })\n      })  \n\n    return (\n      <div className=\"player\">\n        <iframe width=\"560\" height=\"315\" src={this.state.link} \n        frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n        allowFullScreen></iframe>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Youtube from './Youtube';\nimport Spotify from './Spotify';\n\nexport default class FilmDetails extends Component {\n  render() {\n      // console.log('in details.js');\n      var date= new Date (this.props.film.release_date);\n      // console.log(date);\n      \n    return (\n      <div className=\"detailsCard\">\n        <div className=\"float-left\"> \n            <img className=\"poster\" src={\"https://image.tmdb.org/t/p/w500/\"+this.props.film.backdrop_path} alt=\"\" />\n        </div>\n        <div className=\"float-right\">        \n            <h2 className=\"title\">{this.props.film.title}</h2>\n            <br></br>\n            <div className=\"date\">Release Date: {this.props.film.release_date}</div>\n            <br></br>\n            <div className=\"overview\">Overview: {this.props.film.overview}</div>\n        </div>\n        <div className=\"clear\"></div>\n        <div className=\"video\">\n          Watch Trailer Below\n            {/* <Youtube filmTitle={this.props.film.title}/> */}\n        </div>\n        <div className=\"Album\">\n          Listen to Album tracks\n          <Spotify filmTitle={this.props.film.title}/>\n        </div>\n        \n\n      </div>\n    )\n  }\n}\n","const TMDB = [\"51005402\",\n  \"12709110\",\n  \"10495744\",\n  \"6436877\",\n  \"473879\",\n  \"13632628\",\n  \"8883277\",\n  \"12384190\",\n  \"2310491\",\n  \"679901\",\n  \"473893\",\n  \"12626032\",\n  \"6470685\",\n  \"68849201\",\n  \"65497782\",\n  \"14582002\",\n  \"74437962\",\n  \"6436884\",\n  \"11139100\",\n  \"7113713\",\n  \"78387102\",\n  \"301061\",\n  \"301057\",\n  \"6436833\",\n  \"13366813\",\n  \"42887881\",\n  \"11747556\",\n  \"13632934\",\n  \"302639\",\n  \"50613492\",\n  \"12607688\",\n  \"1125239\",\n  \"7972382\",\n  \"931414\",\n  \"91335652\",\n  \"306942\",\n  \"10889268\",\n  \"6873815\",\n  \"302534\",\n  \"1343133\",\n  \"301038\",\n  \"306943\",\n  \"300809\",\n  \"9688328\",\n  \"430119\",\n  \"940065\",\n  \"4606301\",\n  \"301122\"\n]\n  \nexport default TMDB;\n  ","import React, { Component } from 'react'\n\nexport default class Albums extends Component {\n    state= {\n        title: \"\",\n        cover: \"\",\n        album: {}\n    }\n\n    componentDidMount() {\n        console.log('in album');\n        \n        fetch(`https://cors-anywhere.herokuapp.com/https://api.deezer.com/album/${this.props.id}`).then(response => {\n            response.json().then(data => {\n                this.setState({title: data.title, cover: data.cover_medium, album:data})\n            })\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n\n\n  render() {\n\n    return (\n      <div className=\"album\" onClick={() => this.props.handler(this.state.album)}>\n        <img src={this.state.cover} alt=\"\"/>\n        <p>{this.state.title}</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Albums from './Albums';\n\nexport default class AlbumRow extends Component {\n  render() {\n    const filmsInRow= this.props.row.map((id, index) => {\n          return <Albums id={id} key={index} handler={this.props.handler}/>\n      })\n  \n      return (\n        <div className= \"album-row\">\n          {filmsInRow}\n        </div>\n      )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class AlbumDetails extends Component {\n  render() {\n    return (\n      <div className=\"album-details\">\n        <div className=\"float-left\">\n            <img src={this.props.album.cover_big} alt=\"\"/>\n        </div>\n        <div className=\"float-right\">\n        <h2 className=\"title\">{this.props.album.title}</h2>\n        <br></br>\n            <iframe scrolling=\"no\" frameBorder=\"0\" allowtransparency=\"true\" \n        src={\"https://www.deezer.com/plugins/player?format=classic&autoplay=false&playlist=true&width=700&height=350&color=ff0000&layout=dark&size=medium&type=album&id=\"+this.props.album.id+\"&app_id=340402\"}\n        width=\"700\" height=\"350\">Songs</iframe>\n        </div>\n        <div className=\"clear\"></div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport List from './List';\nimport FilmRow from './FilmRow';\nimport FilmDetails from './FilmDetails';\nimport TMDB from './Movies'\nimport AlbumRow from './AlbumRow';\nimport AlbumDetails from './AlbumDetails';\nimport Albums from './Albums';\n\nclass App extends Component {\n\n  constructor (props){\n    super(props)\n      this.state= {\n        films: [],\n        filteredFilms: [],\n        page: '',\n        details: [],\n        songs: [],\n        category: ''\n    }\n  }\n\n  handleFilterClick= (page) => {\n\n    if (this.state.category==='movies') {\n      const filmsList=[];\n\n      for (var x= 0; x < this.state.films.length; x+=3) {\n        for (var r= 0; r < this.state.films[x].props.row.length; r++) {\n          filmsList.push(this.state.films[x].props.row[r])\n        }\n      }\n      console.log(filmsList);\n      \n      if (page==='All Movies') {\n          const allFilms= filmsList.map((film, index) => {\n                if (index%3===0) {\n                  var row=[];\n                  for (var j= index; j < index+3; j++) {\n                    row.push(filmsList[j]);\n                  }\n                  return <FilmRow row={row} key={index} detailsHandle={this.handleDetailsClick}/>\n                }\n          })\n\n          this.setState({filteredFilms: allFilms})\n\n      } else if(page==='A-Z') {\n        const allFilms= filmsList.map(film => {\n          return film.title;\n        });\n        allFilms.sort()\n\n        var sortedFilms=[];\n\n        for (var i=0; i < allFilms.length; i++) {\n          for (var j=0; j < filmsList.length; j++) {\n            if (allFilms[i]===filmsList[j].title) {\n              sortedFilms.push(filmsList[j]);\n            }\n          }\n          \n        }\n\n        const sorting= sortedFilms.map((film, index) => {\n          if (index%3===0) {\n            var row=[];\n            for (var j= index; j < index+3; j++) {\n              row.push(sortedFilms[j]);\n            }\n            return <FilmRow row={row} key={index} detailsHandle={this.handleDetailsClick}/>\n          }\n        })\n        \n        this.setState({filteredFilms: sorting})\n\n      } else if (page==='Release Date') {\n        console.log('Release Date');\n\n        const allFilms= filmsList.map(film => {\n          return film.release_date;\n        });\n        allFilms.sort()\n\n        var sortedFilms=[];\n\n        for (var i=0; i < allFilms.length; i++) {\n          for (var j=0; j < filmsList.length; j++) {\n            if (allFilms[i]===filmsList[j].release_date) {\n              sortedFilms.push(filmsList[j]);\n            }\n          }\n          \n        }\n\n        const sorting= sortedFilms.map((film, index) => {\n          if (index%3===0) {\n            var row=[];\n            for (var j= index; j < index+3; j++) {\n              row.push(sortedFilms[j]);\n            }\n            return <FilmRow row={row} key={index} detailsHandle={this.handleDetailsClick}/>\n          }\n        })\n        \n        this.setState({filteredFilms: sorting})\n        \n      }\n\n    } else if (this.state.category==='songs') {\n\n      // var albums=[]\n      var songsList= []\n      TMDB.forEach(id => {\n        \n        fetch(`https://cors-anywhere.herokuapp.com/https://api.deezer.com/album/${id}`).then(response => {\n            response.json().then(data => {\n              // console.log(data);\n              \n                songsList.push(data);\n            })\n            console.log(songsList);\n        })\n      })\n\n      \n      \n      // for (var x= 0; x < TMDB.length; x+=3) {\n        \n      // }\n      // console.log(songsList);\n\n    }\n\n    this.setState({page: page, details: []})\n  }\n\n  handleDetailsClick= (film) => {\n    this.setState({page: 'details'})\n    this.setState({details: []})\n    const filmDetails= <FilmDetails film={film}/>\n    this.setState({details: filmDetails})\n  }\n\n  handleAlbumClick= (album) => {\n\n    //album is album object\n    this.setState({page: 'details'})\n    this.setState({details: []})\n    const albumDetails= <AlbumDetails album={album}/>\n    this.setState({details: albumDetails})\n  }\n\n  getFilms= () => {\n\n    const url= 'https://api.themoviedb.org/3/list/108712?api_key=47e2a8458de32a33b1c2de69766fb6f2&language=en-US';\n    fetch(url).then(response => {\n      response.json().then(data => {\n\n        const allFilms= data.items.map((film, index) => {\n              if (index%3===0) {\n                var row=[];\n                for (var j= index; j < index+3; j++) {\n                  row.push(data.items[j]);\n                }\n                return <FilmRow row={row} key={index} detailsHandle={this.handleDetailsClick}/>\n              }\n        })\n        this.setState({films: allFilms})\n      })    \n    }) \n\n    this.setState({category: 'movies', details: [], page: ''})    \n  }\n\n  getSongs= () => {\n\n    const albums= TMDB.map((id, index) => {\n      if (index%3===0) {\n        var row=[];\n        for (var j= index; j < index+3; j++) {\n          row.push(TMDB[j]);\n        }\n        return <AlbumRow row={row} key={index} handler={this.handleAlbumClick}/>\n      }\n    })\n\n    this.setState({songs: albums})\n\n    this.setState({category: 'songs', details: [], page: ''})   \n  }\n\n  render() {\n    \n    const allChange= (this.state.page) === 'All Movies' ? ' is-active' : ' inactive';\n    const azChange= (this.state.page) === 'A-Z' ? ' is-active' : ' inactive';\n    const dateChange= (this.state.page) === 'Release Date' ? ' is-active' : ' inactive';\n    const homeChange= ((this.state.category) === 'movies') && (this.state.page) === ''? ' is-active' : ' inactive';\n    const songChange= ((this.state.category) === 'songs') && (this.state.page) === ''? ' is-active' : ' inactive';\n    const filmDetails= this.state.details;\n    const filmList= this.state.filteredFilms;\n    // console.log(this.state.songs);\n    \n    return (\n      <div className=\"App\">\n        <div className=\"header\">Disney Hub</div>\n        <div className=\"categories\">\n          <div className=\"float-left\">          \n            <p onClick= {() => this.getFilms()}>Movies</p>\n            <p onClick= {() => this.getSongs()}>Songs</p>\n            <p>To-watch</p>\n            <p>|</p>\n            <p>Favs</p>\n          </div>\n          <div className=\"float-right\">          \n            <input></input>\n          </div>\n        </div>\n        <div className=\"filters\">\n          <List filter= \"All Movies\" handler={this.handleFilterClick}/>\n          <List filter= \"A-Z\" handler={this.handleFilterClick}/>\n          <List filter= \"Release Date\" handler={this.handleFilterClick}/>\n        </div>\n        <div className={homeChange}>{this.state.films}</div>\n        <div className={songChange}>{this.state.songs}</div>\n        <div className={\"list\"+allChange+azChange+dateChange}>\n          {filmList} \n        </div>\n        <div className={\"details\"}>\n          {filmDetails}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}